<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_f_f_updates" kind="class" language="C++" prot="public">
    <compoundname>FFUpdates</compoundname>
    <includes refid="_f_f_updates_8h" local="no">FFUpdates.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_f_f_updates_1acd0b752e1a1acdaf725499c3fffdd9d9" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String FFUpdates::user_token</definition>
        <argsstring></argsstring>
        <name>user_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="11" column="16" bodyfile="src/FFUpdates.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_f_updates_1a3e3a77fc4eb1c9693df164df657e3a92" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String FFUpdates::fingerprint</definition>
        <argsstring></argsstring>
        <name>fingerprint</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="12" column="16" bodyfile="src/FFUpdates.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_f_updates_1adeb97e6c5915167468be6a4a2d4cdc11" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String FFUpdates::token_SHA256</definition>
        <argsstring></argsstring>
        <name>token_SHA256</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="13" column="16" bodyfile="src/FFUpdates.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_f_updates_1a1c2cc99af9840f4036a4fb2fead12688" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* FFUpdates::update_host</definition>
        <argsstring></argsstring>
        <name>update_host</name>
        <initializer>= &quot;firmwareforge.com&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="14" column="20" bodyfile="src/FFUpdates.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_f_updates_1ac471034769a6776d5abb45754254a469" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* FFUpdates::update_url</definition>
        <argsstring></argsstring>
        <name>update_url</name>
        <initializer>= &quot;/devices/<ref refid="class_f_f_updates_1a6c3da4ba09e37f958545f8e4885f2bde" kindref="member">update</ref>&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="15" column="20" bodyfile="src/FFUpdates.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_f_updates_1af9f1bc7019fb262149847b220d0195b6" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* FFUpdates::finger_url</definition>
        <argsstring></argsstring>
        <name>finger_url</name>
        <initializer>= &quot;/devices/fingerprint&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="16" column="20" bodyfile="src/FFUpdates.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_f_updates_1aca994620bc0f2dda3d556fa16ea09ad3" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int FFUpdates::https_port</definition>
        <argsstring></argsstring>
        <name>https_port</name>
        <initializer>= 443</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="17" column="19" bodyfile="src/FFUpdates.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_f_updates_1ac9d8ee60af9c2bfa5fa1eb1f3d70dcf8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool FFUpdates::debug</definition>
        <argsstring></argsstring>
        <name>debug</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="18" column="14" bodyfile="src/FFUpdates.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_f_f_updates_1acd0ddc45a0132a3136a2459d9b17bae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FFUpdates::FFUpdates</definition>
        <argsstring>(String user_token, String device_token)</argsstring>
        <name>FFUpdates</name>
        <param>
          <type>String</type>
          <declname>user_token</declname>
        </param>
        <param>
          <type>String</type>
          <declname>device_token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default Constructor for the <ref refid="class_f_f_updates" kindref="compound">FFUpdates</ref> class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user_token</parametername>
</parameternamelist>
<parameterdescription>
<para>The token provided to the user on their profile page.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_token</parametername>
</parameternamelist>
<parameterdescription>
<para>The token provided to the user for the specific device, can be found on the devices page on the device&apos;s card. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="31" column="9" bodyfile="src/FFUpdates.cpp" bodystart="6" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_f_f_updates_1a1a3a2c07d6806b0f7ee4b6eeaf2a2105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FFUpdates::FFUpdates</definition>
        <argsstring>(String user_token, String device_token, bool debug)</argsstring>
        <name>FFUpdates</name>
        <param>
          <type>String</type>
          <declname>user_token</declname>
        </param>
        <param>
          <type>String</type>
          <declname>device_token</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Debug Constructor for the <ref refid="class_f_f_updates" kindref="compound">FFUpdates</ref> class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user_token</parametername>
</parameternamelist>
<parameterdescription>
<para>The token provided to the user on their profile page.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_token</parametername>
</parameternamelist>
<parameterdescription>
<para>The token provided to the user for the specific device, can be found on the devices page on the device&apos;s card.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>debug</parametername>
</parameternamelist>
<parameterdescription>
<para>Enables debugging if passed true. Provides more verbose output messages. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="45" column="9" bodyfile="src/FFUpdates.cpp" bodystart="25" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_f_f_updates_1a5be1e73947a50d1591dd2dc684a52c2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FFUpdates::~FFUpdates</definition>
        <argsstring>()</argsstring>
        <name>~FFUpdates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor for the <ref refid="class_f_f_updates" kindref="compound">FFUpdates</ref> class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="50" column="9" bodyfile="src/FFUpdates.cpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_f_f_updates_1aa0465bbd992c04479da9900f081ebdc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FFUpdates::print_SHA256</definition>
        <argsstring>()</argsstring>
        <name>print_SHA256</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prints the sha256 has that the device has calculated. Meant more for debugging than for user usage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="55" column="14" bodyfile="src/FFUpdates.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_f_f_updates_1acf97c6925218f8ede19c065e87efa9b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FFUpdates::renewFingerprint</definition>
        <argsstring>()</argsstring>
        <name>renewFingerprint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Asks the server for it&apos;s ssl certificate&apos;s sha1 fingerprint.</para>
<para>The certificate will change every so often due to it expiring, in that event, the device needs to grab the new one so that it may communicate over https. To do this, the device will ask the serverfor its certificate fingerprint and for a challenge token. This token is the sha256 hash value of the device&apos;s token combined with the device owner&apos;s user token. Both the device and the server will know this value and can calculate it independent of one another. If the hash passed from the server matches what the device has calculated, the fingerprint is accepted and will be used to establish secure communicates with the authentic server.</para>
<para>The user never needs to call this funciton directly, update will call it in the event that the fingerprint has changed. This function has been left as public so that the user can call this if they ever choose to, although there is really no reason to. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="72" column="14" bodyfile="src/FFUpdates.cpp" bodystart="52" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_f_f_updates_1a6c3da4ba09e37f958545f8e4885f2bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FFUpdates::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks to see if there is an update available for the device. If there is, the update is downloaded and applied. Otherwise, its business as usual.</para>
<para>The user is required to determine the update interval. For instance, if you want to check for an update 5 times an hour, then you would need to implement a clock function that calles update 5 times an hour. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/FFUpdates.h" line="81" column="14" bodyfile="src/FFUpdates.cpp" bodystart="118" bodyend="153"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides an abstraction layer for the user to update their device. Piggy backs off of the ESP8266httpUpdate class. The additional functionality provided by this library includes handling changes made to the server&apos;s ssl certificate fingerpint. </para>
    </detaileddescription>
    <location file="src/FFUpdates.h" line="9" column="16" bodyfile="src/FFUpdates.h" bodystart="9" bodyend="82"/>
    <listofallmembers>
      <member refid="class_f_f_updates_1ac9d8ee60af9c2bfa5fa1eb1f3d70dcf8" prot="private" virt="non-virtual"><scope>FFUpdates</scope><name>debug</name></member>
      <member refid="class_f_f_updates_1acd0ddc45a0132a3136a2459d9b17bae5" prot="public" virt="non-virtual"><scope>FFUpdates</scope><name>FFUpdates</name></member>
      <member refid="class_f_f_updates_1a1a3a2c07d6806b0f7ee4b6eeaf2a2105" prot="public" virt="non-virtual"><scope>FFUpdates</scope><name>FFUpdates</name></member>
      <member refid="class_f_f_updates_1af9f1bc7019fb262149847b220d0195b6" prot="private" virt="non-virtual"><scope>FFUpdates</scope><name>finger_url</name></member>
      <member refid="class_f_f_updates_1a3e3a77fc4eb1c9693df164df657e3a92" prot="private" virt="non-virtual"><scope>FFUpdates</scope><name>fingerprint</name></member>
      <member refid="class_f_f_updates_1aca994620bc0f2dda3d556fa16ea09ad3" prot="private" virt="non-virtual"><scope>FFUpdates</scope><name>https_port</name></member>
      <member refid="class_f_f_updates_1aa0465bbd992c04479da9900f081ebdc6" prot="public" virt="non-virtual"><scope>FFUpdates</scope><name>print_SHA256</name></member>
      <member refid="class_f_f_updates_1acf97c6925218f8ede19c065e87efa9b8" prot="public" virt="non-virtual"><scope>FFUpdates</scope><name>renewFingerprint</name></member>
      <member refid="class_f_f_updates_1adeb97e6c5915167468be6a4a2d4cdc11" prot="private" virt="non-virtual"><scope>FFUpdates</scope><name>token_SHA256</name></member>
      <member refid="class_f_f_updates_1a6c3da4ba09e37f958545f8e4885f2bde" prot="public" virt="non-virtual"><scope>FFUpdates</scope><name>update</name></member>
      <member refid="class_f_f_updates_1a1c2cc99af9840f4036a4fb2fead12688" prot="private" virt="non-virtual"><scope>FFUpdates</scope><name>update_host</name></member>
      <member refid="class_f_f_updates_1ac471034769a6776d5abb45754254a469" prot="private" virt="non-virtual"><scope>FFUpdates</scope><name>update_url</name></member>
      <member refid="class_f_f_updates_1acd0b752e1a1acdaf725499c3fffdd9d9" prot="private" virt="non-virtual"><scope>FFUpdates</scope><name>user_token</name></member>
      <member refid="class_f_f_updates_1a5be1e73947a50d1591dd2dc684a52c2b" prot="public" virt="non-virtual"><scope>FFUpdates</scope><name>~FFUpdates</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
