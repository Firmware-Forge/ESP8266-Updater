Getting Started
===============

To get started with Firmware Forge, you will first need to create an account. Please visit
`<https://firmwareforge.com>`_ and register. Once your email address is confirmed and you have logged in,
visit the user guide tab on the home page. This guide will walk you through the steps of setting up your account
and adding your first device. Once you have added your first device, come back to this guide for instructions on
how to use the updater library.

Getting Updates
---------------

Now that you have registerd your first device, you are ready to start using this library! Usage is pretty simple
if you are using `platformio <https://platformio.org/>`_. All you will need to do is go to the libraries page, search for
"Firmware Forge", and download the library. All of the dependencies will be handled by platformio. 


Usage is straight forward, you will declare the updater outside of the setup and loop functions:

..code-block:: c
   // user and device token generated by the website
   const String user_token = "USER_TOKEN";
   const String device_token = "DEVICE_TOKEN";

   FFUpdates updater(user_token, device_token);  // instantiate the updater

Then call update when you would like to recieve an update

..code-block:: c
   updater.update()

Its that simple. The updater does not handle the frequency at which update checking occurs, 
you will need to implement a mechanism for how often you wish to check for updates yourself.

Below is a complete example that checks for an update every 5 seconds.

..code-block:: c
   #include <ESP8266WiFi.h>
   #include "FFUpdates.h"

   const char* ssid = "SSID";
   const char* password = "PASSWORD";
   const String user_token = "USER_TOKEN";
   const String device_token = "DEVICE_TOKEN";

   FFUpdates updater(user_token, device_token);  // instantiate the updater
   // FFUpdates updater(user_token, device_token, true); // enables debugging, this should not be enabled for production use.

    void setup() {
        Serial.begin(9600);
        Serial.println();
        Serial.print("connecting to ");
        Serial.println(ssid);
        WiFi.mode(WIFI_STA);
        WiFi.begin(ssid, password);
        while (WiFi.status() != WL_CONNECTED) {
           delay(500);
           Serial.print(".");
        }
        Serial.println();
        Serial.println("WiFi connected");
        Serial.print("IP address: ");
        Serial.println(WiFi.localIP());
    }

    void loop() {
        Serial.println("new lib");
        updater.update(); // check for an update, apply it if one exists.
        delay(5000);
    }
