pipeline{
    agent{
         docker {image 'shinn5112/documentation:1.1'}
    }
    stages{
        stage('Deploy to Github Pages'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'github_https', passwordVariable: 'https_password', usernameVariable: 'https_user')]) {
                script { // this allows me to use a try catch block, try catch must be in script tags.
                    try {
                        sh 'rm -r *'
                    } catch (Exception e) {
                        sh 'echo "Empty directory"'
                    }
                }
                script { // this allows me to use a try catch block, try catch must be in script tags.
                    try {
                        sh 'rm -r .*'
                    } catch (Exception e) {
                        sh 'echo "Even the hidden files are gone."'
                    }
                }
                sh '''
                    git config user.email "shinnserver@gmail.com"
                    git config user.name "Jenkins"

                    git clone https://github.com/Firmware-Forge/ESP8266-Updater.git
                    mv ESP8266-Updater ESP8266-Build                                 # will be used to build to docs
                    git clone https://github.com/Firmware-Forge/ESP8266-Updater.git
                    mv ESP8266-Updater ESP8266-Deploy                                # will be used to deploy them

                    cd ESP8266-Build
                    build_dir=$(pwd)
                    cd ../
                    cd ESP8266-Deploy
                    git checkout gh-pages
                    rm -r *                                                          # clean for docs deployment
                    deploy_dir=$(pwd)

                    cd "$build_dir"
                    doxygen Doxyfile
                    ls
                    cd ./docs/sphinx
                    make clean
                    make html
                    cd ./build/html
                    mv * "$deploy_dir"                                              # move all of the built docs to the deploy dir
                    cd "$deploy_dir"
                    git add *
                    git commit -m "Deploying latest documentation"
                   
                '''
                }
            }
        }
        
    }
}